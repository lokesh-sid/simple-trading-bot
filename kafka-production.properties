# Kafka Configuration for Production Environment
# This file contains environment-specific Kafka configurations

# =================================================================
# KAFKA BROKER CONFIGURATION (server.properties)
# =================================================================

# Broker Settings
broker.id=1
listeners=PLAINTEXT://0.0.0.0:9092
advertised.listeners=PLAINTEXT://kafka:9092
num.network.threads=8
num.io.threads=16
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

# Log Settings
log.dirs=/var/lib/kafka/logs
num.partitions=6
num.recovery.threads.per.data.dir=2
offsets.topic.replication.factor=3
transaction.state.log.replication.factor=3
transaction.state.log.min.isr=2

# Log Retention Settings
log.retention.hours=168
log.retention.bytes=1073741824
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000

# Zookeeper Settings
zookeeper.connect=zookeeper:2181
zookeeper.connection.timeout.ms=18000

# Group Coordinator Settings
group.initial.rebalance.delay.ms=0

# Trading Bot Specific Configurations
auto.create.topics.enable=true
default.replication.factor=3
min.insync.replicas=2

# Performance Tuning
replica.fetch.max.bytes=1048576
message.max.bytes=1000000
compression.type=snappy

# =================================================================
# SPRING KAFKA CONFIGURATION (application-prod.properties)
# =================================================================

# Kafka Cluster Connection
spring.kafka.bootstrap-servers=kafka-1:9092,kafka-2:9092,kafka-3:9092
spring.kafka.client-id=trading-bot-prod

# Producer Configuration (High Reliability)
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10
spring.kafka.producer.batch.size=32768
spring.kafka.producer.linger.ms=10
spring.kafka.producer.buffer.memory=67108864
spring.kafka.producer.compression.type=snappy
spring.kafka.producer.max.in.flight.requests.per.connection=1
spring.kafka.producer.enable.idempotence=true
spring.kafka.producer.request.timeout.ms=30000
spring.kafka.producer.delivery.timeout.ms=120000

# Consumer Configuration (High Throughput)
spring.kafka.consumer.group.id=trading-bot-prod
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.max.poll.records=1000
spring.kafka.consumer.fetch.min.bytes=1024
spring.kafka.consumer.fetch.max.wait.ms=500
spring.kafka.consumer.session.timeout.ms=30000
spring.kafka.consumer.heartbeat.interval.ms=10000

# Security Configuration (if using SSL/SASL)
# spring.kafka.security.protocol=SSL
# spring.kafka.ssl.trust-store-location=classpath:kafka.client.truststore.jks
# spring.kafka.ssl.trust-store-password=password
# spring.kafka.ssl.key-store-location=classpath:kafka.client.keystore.jks
# spring.kafka.ssl.key-store-password=password

# Topic Configuration
trading.kafka.topics.trade-signals=trading.signals
trading.kafka.topics.trade-execution=trading.executions
trading.kafka.topics.risk-events=trading.risk
trading.kafka.topics.market-data=trading.market-data
trading.kafka.topics.bot-status=trading.bot-status

# Partition Strategy Configuration
trading.kafka.partitions.trade-signals=6
trading.kafka.partitions.trade-executions=6
trading.kafka.partitions.risk-events=3
trading.kafka.partitions.market-data=12
trading.kafka.partitions.bot-status=3

# Replication Configuration
trading.kafka.replication-factor.trade-signals=3
trading.kafka.replication-factor.trade-executions=3
trading.kafka.replication-factor.risk-events=3
trading.kafka.replication-factor.market-data=3
trading.kafka.replication-factor.bot-status=3

# Consumer Group Configuration
trading.kafka.consumer-groups.signals=trading-bot-signals
trading.kafka.consumer-groups.executions=trading-bot-executions
trading.kafka.consumer-groups.risk=trading-bot-risk
trading.kafka.consumer-groups.market-data=trading-bot-market-data
trading.kafka.consumer-groups.status=trading-bot-status