plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.tradingbot'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    binanceConnectorVersion = '3.0.5'
    bybitApiVersion = '1.2.6'
    ta4jVersion = '0.15'
    junitVersion = '5.9.2'
    mockitoVersion = '4.11.0'
    jacksonVersion = '2.15.2'
    resilience4jVersion = '2.1.0'
    springdocVersion = '2.2.0'
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    // Resilience4j for rate limiting and circuit breaker
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
    
    // External API dependencies
    implementation "io.github.binance:binance-futures-connector-java:${binanceConnectorVersion}"
    // Commented out bybit dependency as it was commented in Maven
    // implementation "io.github.wuhewuhe:bybit-java-api:${bybitApiVersion}"
    
    // Technical analysis
    implementation "org.ta4j:ta4j-core:${ta4jVersion}"
    
    // JSON processing
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    
    // OpenAPI/Swagger documentation
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}

// Configure the main class for the Spring Boot application
springBoot {
    mainClass = 'tradingbot.SimpleTradingBotApplication'
}

// Task to create a fat JAR
jar {
    enabled = false
    archiveClassifier = ''
}
