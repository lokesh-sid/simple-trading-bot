### Trading Bot API Gateway Tests
### Base URL: http://localhost:8080/gateway

###############################################################################
# 1. CREATE BOT VIA GATEWAY
###############################################################################

### Create a new trading bot through gateway
POST http://localhost:8080/gateway/api/bots
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 2. START BOT VIA GATEWAY (replace {botId} with actual ID)
###############################################################################

### Start bot in LONG mode (paper trading) via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/start
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "direction": "LONG",
  "paper": true
}

### Start bot in SHORT mode (paper trading) via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/start
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "direction": "SHORT",
  "paper": true
}

### Start bot in LONG mode (live trading) via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/start
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "direction": "LONG",
  "paper": false
}

###############################################################################
# 3. GET BOT STATUS VIA GATEWAY
###############################################################################

### Get status of specific bot via gateway
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 4. UPDATE LEVERAGE VIA GATEWAY
###############################################################################

### Set leverage to 10x via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/leverage
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "leverage": 10
}

### Set leverage to 15x via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/leverage
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "leverage": 15
}

###############################################################################
# 5. TOGGLE SENTIMENT ANALYSIS VIA GATEWAY
###############################################################################

### Enable sentiment analysis via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/sentiment
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "enable": true
}

### Disable sentiment analysis via gateway
POST http://localhost:8080/gateway/api/bots/{botId}/sentiment
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "enable": false
}

###############################################################################
# 6. STOP BOT VIA GATEWAY
###############################################################################

### Stop a running bot via gateway
PUT http://localhost:8080/gateway/api/bots/{botId}/stop
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 7. LIST ALL BOTS VIA GATEWAY
###############################################################################

### Get list of all bot IDs via gateway
GET http://localhost:8080/gateway/api/bots
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 8. DELETE BOT VIA GATEWAY
###############################################################################

### Delete a specific bot via gateway
DELETE http://localhost:8080/gateway/api/bots/{botId}
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 9. GATEWAY HEALTH & INFO
###############################################################################

### Gateway health check
GET http://localhost:8080/gateway/health

###

### Gateway information
GET http://localhost:8080/gateway/info

###############################################################################
# 10. RESILIENCE ENDPOINTS VIA GATEWAY
###############################################################################

### Get rate limiter metrics via gateway
GET http://localhost:8080/gateway/api/resilience/rate-limiters
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Get circuit breaker metrics via gateway
GET http://localhost:8080/gateway/api/resilience/circuit-breaker
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Get retry metrics via gateway
GET http://localhost:8080/gateway/api/resilience/retry
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Get all resilience metrics via gateway
GET http://localhost:8080/gateway/api/resilience/metrics
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Get resilience health via gateway
GET http://localhost:8080/gateway/api/resilience/health
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 11. MULTI-BOT SCENARIO VIA GATEWAY
###############################################################################

### Create Bot 1 via gateway
POST http://localhost:8080/gateway/api/bots
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Create Bot 2 via gateway
POST http://localhost:8080/gateway/api/bots
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

###

### List all bots (should show 2 bots)
GET http://localhost:8080/gateway/api/bots
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Start Bot 1 in LONG mode
POST http://localhost:8080/gateway/api/bots/{bot1-id}/start
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "direction": "LONG",
  "paper": true
}

###

### Start Bot 2 in SHORT mode
POST http://localhost:8080/gateway/api/bots/{bot2-id}/start
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "direction": "SHORT",
  "paper": true
}

###

### Check Bot 1 status
GET http://localhost:8080/gateway/api/bots/{bot1-id}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Check Bot 2 status
GET http://localhost:8080/gateway/api/bots/{bot2-id}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Update Bot 1 leverage
POST http://localhost:8080/gateway/api/bots/{bot1-id}/leverage
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "leverage": 20
}

###

### Enable sentiment for Bot 2
POST http://localhost:8080/gateway/api/bots/{bot2-id}/sentiment
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "enable": true
}

###

### Stop Bot 1
PUT http://localhost:8080/gateway/api/bots/{bot1-id}/stop
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Delete Bot 1
DELETE http://localhost:8080/gateway/api/bots/{bot1-id}
X-Client-ID: web-app
Authorization: Bearer test-token

###

### List remaining bots (should show 1 bot)
GET http://localhost:8080/gateway/api/bots
X-Client-ID: web-app
Authorization: Bearer test-token

###############################################################################
# 12. ERROR TEST CASES VIA GATEWAY
###############################################################################

### Test: Non-existent bot (should return 404)
GET http://localhost:8080/gateway/api/bots/non-existent-id/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

### Test: Invalid leverage (should return 400)
POST http://localhost:8080/gateway/api/bots/{botId}/leverage
Content-Type: application/json
X-Client-ID: web-app
Authorization: Bearer test-token

{
  "leverage": 0
}

###

### Test: Missing authorization header (optional - depends on security config)
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app

###############################################################################
# 13. RATE LIMITING TEST (Trigger rate limiter)
###############################################################################

### Send multiple rapid requests to trigger rate limiter
### (100 requests per minute limit)

# Request 1
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

# Request 2
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

# Request 3
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

# ... Continue up to 100+ requests to see rate limiting in action
# After 100 requests within 1 minute, should get 429 Too Many Requests

###############################################################################
# 14. CIRCUIT BREAKER TEST (Backend failure simulation)
###############################################################################

### Make requests when backend is down to trigger circuit breaker
### Stop the backend service first, then run these requests

# Request 1 - Should fail and count toward circuit breaker
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

# Request 2
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

###

# After 50% failure rate, circuit should OPEN
# Next requests should immediately return 503 Service Unavailable
# with fallback response

###############################################################################
# 15. RESPONSE HEADER VERIFICATION
###############################################################################

### Check gateway headers in response
GET http://localhost:8080/gateway/api/bots/{botId}/status
X-Client-ID: web-app
Authorization: Bearer test-token

# Expected response headers:
# - X-Gateway-Proxied: true
# - Access-Control-Allow-Origin: *
# - Content-Type: application/json

###############################################################################
# NOTES:
# - Replace {botId}, {bot1-id}, {bot2-id} with actual bot IDs
# - Headers like X-Client-ID and Authorization are optional but recommended
# - Gateway adds X-Gateway-Request, X-Gateway-Timestamp to backend requests
# - All requests go through rate limiting, circuit breaker, and retry logic
# - Use different X-Client-ID values to test rate limiting per client
###############################################################################
