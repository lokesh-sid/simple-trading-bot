package tradingbot.bot.events;

import java.util.Map;

import tradingbot.bot.TradeDirection;

/**
 * Event representing a trading signal generated by the strategy engine.
 * Published when the bot identifies a buy/sell opportunity.
 */
public class TradeSignalEvent extends TradingEvent {
    
    private String symbol;
    private TradeDirection signal;
    private double strength;
    private Map<String, Object> indicators;
    private Map<String, Object> metadata;
    
    public TradeSignalEvent() {
        super();
    }
    
    public TradeSignalEvent(String botId, String symbol, TradeDirection signal) {
        super(botId, "TRADE_SIGNAL");
        this.symbol = symbol;
        this.signal = signal;
    }
    
    // Getters and Setters
    public String getSymbol() {
        return symbol;
    }
    
    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }
    
    public TradeDirection getSignal() {
        return signal;
    }
    
    public void setSignal(TradeDirection signal) {
        this.signal = signal;
    }
    
    public double getStrength() {
        return strength;
    }
    
    public void setStrength(double strength) {
        this.strength = strength;
    }
    
    public Map<String, Object> getIndicators() {
        return indicators;
    }
    
    public void setIndicators(Map<String, Object> indicators) {
        this.indicators = indicators;
    }
    
    public Map<String, Object> getMetadata() {
        return metadata;
    }
    
    public void setMetadata(Map<String, Object> metadata) {
        this.metadata = metadata;
    }
    
    @Override
    public String toString() {
        return "TradeSignalEvent{" +
                "symbol='" + symbol + '\'' +
                ", signal=" + signal +
                ", strength=" + strength +
                ", eventId='" + getEventId() + '\'' +
                ", timestamp=" + getTimestamp() +
                '}';
    }
}